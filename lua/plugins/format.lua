return {
	-- {
	-- 	"stevearc/conform.nvim",
	-- 	dependencies = { "mason.nvim" },
	-- 	cmd = "ConformInfo",
	-- 	keys = {
	-- 		{
	-- 			"<leader>fm",
	-- 			function()
	-- 				require("conform").format({ formatters = { "injected" }, timeout_ms = 3000 })
	-- 			end,
	-- 			mode = { "n", "v" },
	-- 			desc = "Format Injected Langs",
	-- 		},
	-- 	},
	-- 	config = function()
	-- 		require("conform").setup({
	-- 			formatters_by_ft = {
	-- 				lua = { "stylua" },
	-- 				-- conform will run multiple formatters sequentially
	-- 				python = { "isort", "black" },
	-- 				c = { "clang-format" },
	-- 			},
	-- 			-- Set this to change the default values when calling conform.format()
	-- 			-- This will also affect the default values for format_on_save/format_after_save
	-- 			default_format_opts = {
	-- 				lsp_format = "fallback",
	-- 			},
	-- 			-- If this is set, Conform will run the formatter on save.
	-- 			-- It will pass the table to conform.format().
	-- 			-- This can also be a function that returns the table.
	-- 			format_on_save = {
	-- 				-- I recommend these options. See :help conform.format for details.
	-- 				lsp_format = "fallback",
	-- 				timeout_ms = 500,
	-- 			},
	-- 			-- If this is set, Conform will run the formatter asynchronously after save.
	-- 			-- It will pass the table to conform.format().
	-- 			-- This can also be a function that returns the table.
	-- 			format_after_save = {
	-- 				lsp_format = "fallback",
	-- 			},
	-- 		})
	-- 	end,
	-- },
}
